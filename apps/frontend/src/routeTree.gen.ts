/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LandingRouteRouteImport } from './routes/_landing/route'
import { Route as DashboardRouteRouteImport } from './routes/_dashboard/route'
import { Route as BuilderRouteRouteImport } from './routes/_builder/route'
import { Route as LandingIndexRouteImport } from './routes/_landing/index'
import { Route as LandingSignupRouteImport } from './routes/_landing/signup'
import { Route as LandingSigninRouteImport } from './routes/_landing/signin'
import { Route as LandingMultiFactorVerificationRouteImport } from './routes/_landing/multi-factor-verification'
import { Route as DashboardWorkflowsRouteImport } from './routes/_dashboard/workflows'
import { Route as DashboardProfileRouteImport } from './routes/_dashboard/profile'
import { Route as DashboardDashboardRouteImport } from './routes/_dashboard/dashboard'
import { Route as DashboardCredentialsRouteImport } from './routes/_dashboard/credentials'
import { Route as BuilderBuilderIndexRouteImport } from './routes/_builder/builder/index'
import { Route as BuilderBuilderWorkflowIdRouteImport } from './routes/_builder/builder/$workflowId'

const LandingRouteRoute = LandingRouteRouteImport.update({
  id: '/_landing',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const BuilderRouteRoute = BuilderRouteRouteImport.update({
  id: '/_builder',
  getParentRoute: () => rootRouteImport,
} as any)
const LandingIndexRoute = LandingIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LandingRouteRoute,
} as any)
const LandingSignupRoute = LandingSignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => LandingRouteRoute,
} as any)
const LandingSigninRoute = LandingSigninRouteImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => LandingRouteRoute,
} as any)
const LandingMultiFactorVerificationRoute =
  LandingMultiFactorVerificationRouteImport.update({
    id: '/multi-factor-verification',
    path: '/multi-factor-verification',
    getParentRoute: () => LandingRouteRoute,
  } as any)
const DashboardWorkflowsRoute = DashboardWorkflowsRouteImport.update({
  id: '/workflows',
  path: '/workflows',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardProfileRoute = DashboardProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardDashboardRoute = DashboardDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardCredentialsRoute = DashboardCredentialsRouteImport.update({
  id: '/credentials',
  path: '/credentials',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const BuilderBuilderIndexRoute = BuilderBuilderIndexRouteImport.update({
  id: '/builder/',
  path: '/builder/',
  getParentRoute: () => BuilderRouteRoute,
} as any)
const BuilderBuilderWorkflowIdRoute =
  BuilderBuilderWorkflowIdRouteImport.update({
    id: '/builder/$workflowId',
    path: '/builder/$workflowId',
    getParentRoute: () => BuilderRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/credentials': typeof DashboardCredentialsRoute
  '/dashboard': typeof DashboardDashboardRoute
  '/profile': typeof DashboardProfileRoute
  '/workflows': typeof DashboardWorkflowsRoute
  '/multi-factor-verification': typeof LandingMultiFactorVerificationRoute
  '/signin': typeof LandingSigninRoute
  '/signup': typeof LandingSignupRoute
  '/': typeof LandingIndexRoute
  '/builder/$workflowId': typeof BuilderBuilderWorkflowIdRoute
  '/builder': typeof BuilderBuilderIndexRoute
}
export interface FileRoutesByTo {
  '/credentials': typeof DashboardCredentialsRoute
  '/dashboard': typeof DashboardDashboardRoute
  '/profile': typeof DashboardProfileRoute
  '/workflows': typeof DashboardWorkflowsRoute
  '/multi-factor-verification': typeof LandingMultiFactorVerificationRoute
  '/signin': typeof LandingSigninRoute
  '/signup': typeof LandingSignupRoute
  '/': typeof LandingIndexRoute
  '/builder/$workflowId': typeof BuilderBuilderWorkflowIdRoute
  '/builder': typeof BuilderBuilderIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_builder': typeof BuilderRouteRouteWithChildren
  '/_dashboard': typeof DashboardRouteRouteWithChildren
  '/_landing': typeof LandingRouteRouteWithChildren
  '/_dashboard/credentials': typeof DashboardCredentialsRoute
  '/_dashboard/dashboard': typeof DashboardDashboardRoute
  '/_dashboard/profile': typeof DashboardProfileRoute
  '/_dashboard/workflows': typeof DashboardWorkflowsRoute
  '/_landing/multi-factor-verification': typeof LandingMultiFactorVerificationRoute
  '/_landing/signin': typeof LandingSigninRoute
  '/_landing/signup': typeof LandingSignupRoute
  '/_landing/': typeof LandingIndexRoute
  '/_builder/builder/$workflowId': typeof BuilderBuilderWorkflowIdRoute
  '/_builder/builder/': typeof BuilderBuilderIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/credentials'
    | '/dashboard'
    | '/profile'
    | '/workflows'
    | '/multi-factor-verification'
    | '/signin'
    | '/signup'
    | '/'
    | '/builder/$workflowId'
    | '/builder'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/credentials'
    | '/dashboard'
    | '/profile'
    | '/workflows'
    | '/multi-factor-verification'
    | '/signin'
    | '/signup'
    | '/'
    | '/builder/$workflowId'
    | '/builder'
  id:
    | '__root__'
    | '/_builder'
    | '/_dashboard'
    | '/_landing'
    | '/_dashboard/credentials'
    | '/_dashboard/dashboard'
    | '/_dashboard/profile'
    | '/_dashboard/workflows'
    | '/_landing/multi-factor-verification'
    | '/_landing/signin'
    | '/_landing/signup'
    | '/_landing/'
    | '/_builder/builder/$workflowId'
    | '/_builder/builder/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  BuilderRouteRoute: typeof BuilderRouteRouteWithChildren
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  LandingRouteRoute: typeof LandingRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_landing': {
      id: '/_landing'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LandingRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_builder': {
      id: '/_builder'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof BuilderRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_landing/': {
      id: '/_landing/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LandingIndexRouteImport
      parentRoute: typeof LandingRouteRoute
    }
    '/_landing/signup': {
      id: '/_landing/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof LandingSignupRouteImport
      parentRoute: typeof LandingRouteRoute
    }
    '/_landing/signin': {
      id: '/_landing/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof LandingSigninRouteImport
      parentRoute: typeof LandingRouteRoute
    }
    '/_landing/multi-factor-verification': {
      id: '/_landing/multi-factor-verification'
      path: '/multi-factor-verification'
      fullPath: '/multi-factor-verification'
      preLoaderRoute: typeof LandingMultiFactorVerificationRouteImport
      parentRoute: typeof LandingRouteRoute
    }
    '/_dashboard/workflows': {
      id: '/_dashboard/workflows'
      path: '/workflows'
      fullPath: '/workflows'
      preLoaderRoute: typeof DashboardWorkflowsRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/_dashboard/profile': {
      id: '/_dashboard/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof DashboardProfileRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/_dashboard/dashboard': {
      id: '/_dashboard/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardDashboardRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/_dashboard/credentials': {
      id: '/_dashboard/credentials'
      path: '/credentials'
      fullPath: '/credentials'
      preLoaderRoute: typeof DashboardCredentialsRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/_builder/builder/': {
      id: '/_builder/builder/'
      path: '/builder'
      fullPath: '/builder'
      preLoaderRoute: typeof BuilderBuilderIndexRouteImport
      parentRoute: typeof BuilderRouteRoute
    }
    '/_builder/builder/$workflowId': {
      id: '/_builder/builder/$workflowId'
      path: '/builder/$workflowId'
      fullPath: '/builder/$workflowId'
      preLoaderRoute: typeof BuilderBuilderWorkflowIdRouteImport
      parentRoute: typeof BuilderRouteRoute
    }
  }
}

interface BuilderRouteRouteChildren {
  BuilderBuilderWorkflowIdRoute: typeof BuilderBuilderWorkflowIdRoute
  BuilderBuilderIndexRoute: typeof BuilderBuilderIndexRoute
}

const BuilderRouteRouteChildren: BuilderRouteRouteChildren = {
  BuilderBuilderWorkflowIdRoute: BuilderBuilderWorkflowIdRoute,
  BuilderBuilderIndexRoute: BuilderBuilderIndexRoute,
}

const BuilderRouteRouteWithChildren = BuilderRouteRoute._addFileChildren(
  BuilderRouteRouteChildren,
)

interface DashboardRouteRouteChildren {
  DashboardCredentialsRoute: typeof DashboardCredentialsRoute
  DashboardDashboardRoute: typeof DashboardDashboardRoute
  DashboardProfileRoute: typeof DashboardProfileRoute
  DashboardWorkflowsRoute: typeof DashboardWorkflowsRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardCredentialsRoute: DashboardCredentialsRoute,
  DashboardDashboardRoute: DashboardDashboardRoute,
  DashboardProfileRoute: DashboardProfileRoute,
  DashboardWorkflowsRoute: DashboardWorkflowsRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

interface LandingRouteRouteChildren {
  LandingMultiFactorVerificationRoute: typeof LandingMultiFactorVerificationRoute
  LandingSigninRoute: typeof LandingSigninRoute
  LandingSignupRoute: typeof LandingSignupRoute
  LandingIndexRoute: typeof LandingIndexRoute
}

const LandingRouteRouteChildren: LandingRouteRouteChildren = {
  LandingMultiFactorVerificationRoute: LandingMultiFactorVerificationRoute,
  LandingSigninRoute: LandingSigninRoute,
  LandingSignupRoute: LandingSignupRoute,
  LandingIndexRoute: LandingIndexRoute,
}

const LandingRouteRouteWithChildren = LandingRouteRoute._addFileChildren(
  LandingRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  BuilderRouteRoute: BuilderRouteRouteWithChildren,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  LandingRouteRoute: LandingRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
