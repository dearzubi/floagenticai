/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as LandingRouteImport } from "./routes/_landing/route";
import { Route as DashboardRouteImport } from "./routes/_dashboard/route";
import { Route as BuilderRouteImport } from "./routes/_builder/route";
import { Route as LandingIndexImport } from "./routes/_landing/index";
import { Route as LandingSignupImport } from "./routes/_landing/signup";
import { Route as LandingSigninImport } from "./routes/_landing/signin";
import { Route as LandingMultiFactorVerificationImport } from "./routes/_landing/multi-factor-verification";
import { Route as DashboardWorkflowsImport } from "./routes/_dashboard/workflows";
import { Route as DashboardProfileImport } from "./routes/_dashboard/profile";
import { Route as DashboardDashboardImport } from "./routes/_dashboard/dashboard";
import { Route as DashboardCredentialsImport } from "./routes/_dashboard/credentials";
import { Route as BuilderBuilderIndexImport } from "./routes/_builder/builder/index";
import { Route as BuilderBuilderWorkflowIdImport } from "./routes/_builder/builder/$workflowId";

// Create/Update Routes

const LandingRouteRoute = LandingRouteImport.update({
  id: "/_landing",
  getParentRoute: () => rootRoute,
} as any);

const DashboardRouteRoute = DashboardRouteImport.update({
  id: "/_dashboard",
  getParentRoute: () => rootRoute,
} as any);

const BuilderRouteRoute = BuilderRouteImport.update({
  id: "/_builder",
  getParentRoute: () => rootRoute,
} as any);

const LandingIndexRoute = LandingIndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => LandingRouteRoute,
} as any);

const LandingSignupRoute = LandingSignupImport.update({
  id: "/signup",
  path: "/signup",
  getParentRoute: () => LandingRouteRoute,
} as any);

const LandingSigninRoute = LandingSigninImport.update({
  id: "/signin",
  path: "/signin",
  getParentRoute: () => LandingRouteRoute,
} as any);

const LandingMultiFactorVerificationRoute =
  LandingMultiFactorVerificationImport.update({
    id: "/multi-factor-verification",
    path: "/multi-factor-verification",
    getParentRoute: () => LandingRouteRoute,
  } as any);

const DashboardWorkflowsRoute = DashboardWorkflowsImport.update({
  id: "/workflows",
  path: "/workflows",
  getParentRoute: () => DashboardRouteRoute,
} as any);

const DashboardProfileRoute = DashboardProfileImport.update({
  id: "/profile",
  path: "/profile",
  getParentRoute: () => DashboardRouteRoute,
} as any);

const DashboardDashboardRoute = DashboardDashboardImport.update({
  id: "/dashboard",
  path: "/dashboard",
  getParentRoute: () => DashboardRouteRoute,
} as any);

const DashboardCredentialsRoute = DashboardCredentialsImport.update({
  id: "/credentials",
  path: "/credentials",
  getParentRoute: () => DashboardRouteRoute,
} as any);

const BuilderBuilderIndexRoute = BuilderBuilderIndexImport.update({
  id: "/builder/",
  path: "/builder/",
  getParentRoute: () => BuilderRouteRoute,
} as any);

const BuilderBuilderWorkflowIdRoute = BuilderBuilderWorkflowIdImport.update({
  id: "/builder/$workflowId",
  path: "/builder/$workflowId",
  getParentRoute: () => BuilderRouteRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/_builder": {
      id: "/_builder";
      path: "";
      fullPath: "";
      preLoaderRoute: typeof BuilderRouteImport;
      parentRoute: typeof rootRoute;
    };
    "/_dashboard": {
      id: "/_dashboard";
      path: "";
      fullPath: "";
      preLoaderRoute: typeof DashboardRouteImport;
      parentRoute: typeof rootRoute;
    };
    "/_landing": {
      id: "/_landing";
      path: "";
      fullPath: "";
      preLoaderRoute: typeof LandingRouteImport;
      parentRoute: typeof rootRoute;
    };
    "/_dashboard/credentials": {
      id: "/_dashboard/credentials";
      path: "/credentials";
      fullPath: "/credentials";
      preLoaderRoute: typeof DashboardCredentialsImport;
      parentRoute: typeof DashboardRouteImport;
    };
    "/_dashboard/dashboard": {
      id: "/_dashboard/dashboard";
      path: "/dashboard";
      fullPath: "/dashboard";
      preLoaderRoute: typeof DashboardDashboardImport;
      parentRoute: typeof DashboardRouteImport;
    };
    "/_dashboard/profile": {
      id: "/_dashboard/profile";
      path: "/profile";
      fullPath: "/profile";
      preLoaderRoute: typeof DashboardProfileImport;
      parentRoute: typeof DashboardRouteImport;
    };
    "/_dashboard/workflows": {
      id: "/_dashboard/workflows";
      path: "/workflows";
      fullPath: "/workflows";
      preLoaderRoute: typeof DashboardWorkflowsImport;
      parentRoute: typeof DashboardRouteImport;
    };
    "/_landing/multi-factor-verification": {
      id: "/_landing/multi-factor-verification";
      path: "/multi-factor-verification";
      fullPath: "/multi-factor-verification";
      preLoaderRoute: typeof LandingMultiFactorVerificationImport;
      parentRoute: typeof LandingRouteImport;
    };
    "/_landing/signin": {
      id: "/_landing/signin";
      path: "/signin";
      fullPath: "/signin";
      preLoaderRoute: typeof LandingSigninImport;
      parentRoute: typeof LandingRouteImport;
    };
    "/_landing/signup": {
      id: "/_landing/signup";
      path: "/signup";
      fullPath: "/signup";
      preLoaderRoute: typeof LandingSignupImport;
      parentRoute: typeof LandingRouteImport;
    };
    "/_landing/": {
      id: "/_landing/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof LandingIndexImport;
      parentRoute: typeof LandingRouteImport;
    };
    "/_builder/builder/$workflowId": {
      id: "/_builder/builder/$workflowId";
      path: "/builder/$workflowId";
      fullPath: "/builder/$workflowId";
      preLoaderRoute: typeof BuilderBuilderWorkflowIdImport;
      parentRoute: typeof BuilderRouteImport;
    };
    "/_builder/builder/": {
      id: "/_builder/builder/";
      path: "/builder";
      fullPath: "/builder";
      preLoaderRoute: typeof BuilderBuilderIndexImport;
      parentRoute: typeof BuilderRouteImport;
    };
  }
}

// Create and export the route tree

interface BuilderRouteRouteChildren {
  BuilderBuilderWorkflowIdRoute: typeof BuilderBuilderWorkflowIdRoute;
  BuilderBuilderIndexRoute: typeof BuilderBuilderIndexRoute;
}

const BuilderRouteRouteChildren: BuilderRouteRouteChildren = {
  BuilderBuilderWorkflowIdRoute: BuilderBuilderWorkflowIdRoute,
  BuilderBuilderIndexRoute: BuilderBuilderIndexRoute,
};

const BuilderRouteRouteWithChildren = BuilderRouteRoute._addFileChildren(
  BuilderRouteRouteChildren,
);

interface DashboardRouteRouteChildren {
  DashboardCredentialsRoute: typeof DashboardCredentialsRoute;
  DashboardDashboardRoute: typeof DashboardDashboardRoute;
  DashboardProfileRoute: typeof DashboardProfileRoute;
  DashboardWorkflowsRoute: typeof DashboardWorkflowsRoute;
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardCredentialsRoute: DashboardCredentialsRoute,
  DashboardDashboardRoute: DashboardDashboardRoute,
  DashboardProfileRoute: DashboardProfileRoute,
  DashboardWorkflowsRoute: DashboardWorkflowsRoute,
};

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
);

interface LandingRouteRouteChildren {
  LandingMultiFactorVerificationRoute: typeof LandingMultiFactorVerificationRoute;
  LandingSigninRoute: typeof LandingSigninRoute;
  LandingSignupRoute: typeof LandingSignupRoute;
  LandingIndexRoute: typeof LandingIndexRoute;
}

const LandingRouteRouteChildren: LandingRouteRouteChildren = {
  LandingMultiFactorVerificationRoute: LandingMultiFactorVerificationRoute,
  LandingSigninRoute: LandingSigninRoute,
  LandingSignupRoute: LandingSignupRoute,
  LandingIndexRoute: LandingIndexRoute,
};

const LandingRouteRouteWithChildren = LandingRouteRoute._addFileChildren(
  LandingRouteRouteChildren,
);

export interface FileRoutesByFullPath {
  "": typeof LandingRouteRouteWithChildren;
  "/credentials": typeof DashboardCredentialsRoute;
  "/dashboard": typeof DashboardDashboardRoute;
  "/profile": typeof DashboardProfileRoute;
  "/workflows": typeof DashboardWorkflowsRoute;
  "/multi-factor-verification": typeof LandingMultiFactorVerificationRoute;
  "/signin": typeof LandingSigninRoute;
  "/signup": typeof LandingSignupRoute;
  "/": typeof LandingIndexRoute;
  "/builder/$workflowId": typeof BuilderBuilderWorkflowIdRoute;
  "/builder": typeof BuilderBuilderIndexRoute;
}

export interface FileRoutesByTo {
  "": typeof DashboardRouteRouteWithChildren;
  "/credentials": typeof DashboardCredentialsRoute;
  "/dashboard": typeof DashboardDashboardRoute;
  "/profile": typeof DashboardProfileRoute;
  "/workflows": typeof DashboardWorkflowsRoute;
  "/multi-factor-verification": typeof LandingMultiFactorVerificationRoute;
  "/signin": typeof LandingSigninRoute;
  "/signup": typeof LandingSignupRoute;
  "/": typeof LandingIndexRoute;
  "/builder/$workflowId": typeof BuilderBuilderWorkflowIdRoute;
  "/builder": typeof BuilderBuilderIndexRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/_builder": typeof BuilderRouteRouteWithChildren;
  "/_dashboard": typeof DashboardRouteRouteWithChildren;
  "/_landing": typeof LandingRouteRouteWithChildren;
  "/_dashboard/credentials": typeof DashboardCredentialsRoute;
  "/_dashboard/dashboard": typeof DashboardDashboardRoute;
  "/_dashboard/profile": typeof DashboardProfileRoute;
  "/_dashboard/workflows": typeof DashboardWorkflowsRoute;
  "/_landing/multi-factor-verification": typeof LandingMultiFactorVerificationRoute;
  "/_landing/signin": typeof LandingSigninRoute;
  "/_landing/signup": typeof LandingSignupRoute;
  "/_landing/": typeof LandingIndexRoute;
  "/_builder/builder/$workflowId": typeof BuilderBuilderWorkflowIdRoute;
  "/_builder/builder/": typeof BuilderBuilderIndexRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | ""
    | "/credentials"
    | "/dashboard"
    | "/profile"
    | "/workflows"
    | "/multi-factor-verification"
    | "/signin"
    | "/signup"
    | "/"
    | "/builder/$workflowId"
    | "/builder";
  fileRoutesByTo: FileRoutesByTo;
  to:
    | ""
    | "/credentials"
    | "/dashboard"
    | "/profile"
    | "/workflows"
    | "/multi-factor-verification"
    | "/signin"
    | "/signup"
    | "/"
    | "/builder/$workflowId"
    | "/builder";
  id:
    | "__root__"
    | "/_builder"
    | "/_dashboard"
    | "/_landing"
    | "/_dashboard/credentials"
    | "/_dashboard/dashboard"
    | "/_dashboard/profile"
    | "/_dashboard/workflows"
    | "/_landing/multi-factor-verification"
    | "/_landing/signin"
    | "/_landing/signup"
    | "/_landing/"
    | "/_builder/builder/$workflowId"
    | "/_builder/builder/";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  BuilderRouteRoute: typeof BuilderRouteRouteWithChildren;
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren;
  LandingRouteRoute: typeof LandingRouteRouteWithChildren;
}

const rootRouteChildren: RootRouteChildren = {
  BuilderRouteRoute: BuilderRouteRouteWithChildren,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  LandingRouteRoute: LandingRouteRouteWithChildren,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_builder",
        "/_dashboard",
        "/_landing"
      ]
    },
    "/_builder": {
      "filePath": "_builder/route.tsx",
      "children": [
        "/_builder/builder/$workflowId",
        "/_builder/builder/"
      ]
    },
    "/_dashboard": {
      "filePath": "_dashboard/route.tsx",
      "children": [
        "/_dashboard/credentials",
        "/_dashboard/dashboard",
        "/_dashboard/profile",
        "/_dashboard/workflows"
      ]
    },
    "/_landing": {
      "filePath": "_landing/route.tsx",
      "children": [
        "/_landing/multi-factor-verification",
        "/_landing/signin",
        "/_landing/signup",
        "/_landing/"
      ]
    },
    "/_dashboard/credentials": {
      "filePath": "_dashboard/credentials.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/dashboard": {
      "filePath": "_dashboard/dashboard.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/profile": {
      "filePath": "_dashboard/profile.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/workflows": {
      "filePath": "_dashboard/workflows.tsx",
      "parent": "/_dashboard"
    },
    "/_landing/multi-factor-verification": {
      "filePath": "_landing/multi-factor-verification.tsx",
      "parent": "/_landing"
    },
    "/_landing/signin": {
      "filePath": "_landing/signin.tsx",
      "parent": "/_landing"
    },
    "/_landing/signup": {
      "filePath": "_landing/signup.tsx",
      "parent": "/_landing"
    },
    "/_landing/": {
      "filePath": "_landing/index.tsx",
      "parent": "/_landing"
    },
    "/_builder/builder/$workflowId": {
      "filePath": "_builder/builder/$workflowId.tsx",
      "parent": "/_builder"
    },
    "/_builder/builder/": {
      "filePath": "_builder/builder/index.tsx",
      "parent": "/_builder"
    }
  }
}
ROUTE_MANIFEST_END */
